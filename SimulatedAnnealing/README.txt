* Implemenatation :

   ** Fitt's Law --> a+ b*math.log((D*1.0)/W + 1,2) . We make D as a floating point number to ensure correct calculations. Log here is to the base 2

   ** Make Diagram table --> We calculate the probability of each diagram by dividing the count of a particular digram by the total number of
                             digrams in the vocabulary. We store this in a Python dictionary

   ** Compute AMT --> AMT is also stored in the form of dictionary. We use Fitt's law to calculate the movement time between two keys (i,j) and
                      multiply this value by the probability of the digram (i,j)

   ** Simulated Annealing --> This gives us the optimal layout. We swap two keys and if the AMT of the new layout is better than the previous best
                              we ensure it doesnot change for k iterations. We run this num_random_start times to ensure we reach a global minima.
---------------------------------------------------------------------------------------------------------------------------------------------------
Digram Table :

{('t', 'o'): 0.030311230256787395, ('l', 'e'): 0.0017733248721039797, ('r', 'e'): 0.019615103833007994, ('p', 'l'): 0.0017733248721039797, ('n', 'o'): 0.01292807908369669,
 ('h', 'a'): 0.03565409586661908, ('u', 't'): 0.011862220564255989, ('s', 'o'): 0.007756276521909051, ('a', 'l'): 0.006710508215604505, ('i', 'k'): 0.003417490679595356,
 ('w', 'o'): 0.0027949095170194268, ('d', 'o'): 0.004805762110116559, ('g', 'o'): 0.0013167438084171422, ('b', 'e'): 0.01011862705314707, ('m', 'o'): 0.004073788929096844,
 ('o', 'h'): 0.0013719514986706527, ('o', 'w'): 0.0068189845943075, ('a', 'n'): 0.04077311449040824, ('i', 'm'): 0.0018720523806256232, ('e', 'e'): 0.0036750008914022184,
 ('f', 'r'): 0.004777969750925523, ('l', 's'): 0.001773971206038655, ('r', 'i'): 0.0017013124995489128, ('i', 'l'): 0.002038968119255505, ('a', 's'): 0.01839649506033904,
 ('n', 'k'): 0.0022167099512911976, ('k', 'n'): 0.0037072098658135345, ('t', 'h'): 0.11949944237539786, ('f', 't'): 0.0012987541805686812, ('o', 'n'): 0.00925765639099842,
 ('h', 'e'): 0.0980321609302555, ('o', 'u'): 0.022375973096134524, ('s', 't'): 0.0043583913049988435, ('u', 'p'): 0.0022395470836497227, ('y', 'o'): 0.011071215550535935,
 ('h', 't'): 0.0017013124995489128, ('a', 'r'): 0.005749355793581193, ('n', 't'): 0.0015322961756313363, ('t', 'i'): 0.0018720523806256232, ('m', 'y'): 0.0028809257914924574,
 ('c', 'a'): 0.004555415432752347, ('p', 'e'): 0.0017733248721039797, ('e', 't'): 0.0017126233434057296, ('u', 's'): 0.005036126296667061, ('i', 'n'): 0.025858797364293303,
 ('k', 'e'): 0.003417490679595356, ('a', 'u'): 0.0020181777110234514, ('m', 'u'): 0.0012747321026632514, ('e', 'w'): 0.0019299531289402806, ('u', 'r'): 0.002676791990457526,
 ('a', 'b'): 0.003194505472132397, ('n', 'd'): 0.032205796602804204, ('w', 'a'): 0.008546365895888315, ('d', 'i'): 0.0019532211505885896, ('e', 'a'): 0.004500530909466174,
 ('b', 'y'): 0.005338395133450183, ('a', 't'): 0.02678262400158912, ('c', 'h'): 0.0037083409501992163, ('u', 'c'): 0.0012747321026632514, ('e', 'v'): 0.0012926678693504893,
 ('m', 'e'): 0.005831332480962503, ('j', 'u'): 0.003017948585643609, ('n', 'e'): 0.0019299531289402806, ('f', 'o'): 0.011042992302055115, ('l', 'l'): 0.009169324086592804,
 ('o', 'r'): 0.0188493597039015, ('h', 'i'): 0.013080990920408608, ('g', 'h'): 0.0017013124995489128, ('w', 'h'): 0.011761877220897657, ('a', 'd'): 0.002835143804452961,
  ('e', 'c'): 0.0020181777110234514, ('c', 'o'): 0.001601938657092594, ('a', 'v'): 0.0063503924916679475, ('u', 'm'): 0.0015653130674609967, ('r', 'o'): 0.004777969750925523,
  ('u', 'l'): 0.004396848174112021, ('o', 'p'): 0.0017733248721039797, ('h', 'o'): 0.003976300227283328, ('i', 'c'): 0.002433608847535965, ('e', 's'): 0.0016553150678645246,
  ('s', 'e'): 0.005111639644701618, ('a', 'f'): 0.0012987541805686812, ('y', 'e'): 0.0029403885134825797, ('w', 'e'): 0.011068684075958457, ('t', 'e'): 0.0012987541805686812,
  ('e', 'm'): 0.0017998245634256646, ('t', 's'): 0.0016492287566463326, ('b', 'o'): 0.003194505472132397, ('e', 'r'): 0.015922921231175658, ('e', 'l'): 0.002193818957771449,
  ('i', 's'): 0.020749904638814053, ('o', 'o'): 0.0013167438084171422, ('o', 'v'): 0.001232289507619577, ('v', 'e'): 0.008875349868638013, ('g', 'e'): 0.0017126233434057296,
  ('e', 'o'): 0.0017733248721039797, ('i', 'r'): 0.0023846490519843153, ('l', 'i'): 0.003417490679595356, ('a', 'i'): 0.002399245426675731, ('i', 'd'): 0.004352466577264321,
  ('e', 'n'): 0.007687980569478367, ('o', 'f'): 0.03269916483960631, ('o', 'm'): 0.006817261037148366, ('u', 'h'): 0.0038692780999333523, ('o', 't'): 0.0072554215836969594,
   ('a', 'h'): 0.0029403885134825797, ('i', 'g'): 0.0017013124995489128, ('s', 'a'): 0.002399245426675731, ('n', 'l'): 0.001571130072873074, ('l', 'y'): 0.003131272468856669,
   ('e', 'i'): 0.0023846490519843153, ('i', 't'): 0.023555101637627064, ('i', 'f'): 0.0030957241024495304, ('o', 'd'): 0.0013167438084171422, ('o', 's'): 0.0013404427193552345,
   ('l', 'd'): 0.004396848174112021, ('w', 'i'): 0.010167748432182388, ('s', 'h'): 0.0022585600735614197, ('e', 'y'): 0.005766214337043972, ('b', 'u'): 0.006228558544981664}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Results :

Environment :
i5 8th Gen. MAC OS

** For Num_iters = 1000 , Num_random_start = 100
Optimal MT : 0.2370668206  Execution Time : 51 seconds
x  q  z  2  3
1  j  f  p  4
m  u  o  d  l
y  r  t  n  i
b  e  h  a  s
g  v  w  c  k
------------------------------------------------------------------------------------------

** For Num_iters = 10,000  , Num_random_start = 100
AMT : 0.23669359475   Execution Time : 203 seconds
g  v  w  c  q
b  e  h  a  s
y  r  t  i  l
m  u  o  n  d
j  p  f  k  x
2  4  1  z  3
-------------------------------------------------------------------------------------------

** For Num_iters = 10,000  , Num_random_start = 200
AMT : 0.23665359475   Execution Time : 397 seconds
x  4  2  z  3
q  k  f  p  j
d  n  o  u  m
l  i  t  r  y
s  a  h  e  b
1  c  w  v  g
-------------------------------------------------------------------------------------------

** For Num_iters = 10,000  , Num_random_start = 300
Optimal MT : 0.236501426967899  Execution Time : 591 seconds
g  v  w  c  3
b  e  h  a  s
y  r  t  i  l
m  u  o  n  d
j  p  f  k  4
q  z  x  2  1
